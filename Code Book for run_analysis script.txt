Code Book for run_analysis.R
OverviewThis script processes the Human Activity Recognition (HAR) dataset to create a tidy dataset (df_ave) summarizing mean and std for each Subject and Activity. It performs the following steps:1. Merges the training and test datasets2. Assigns appropriate column names using the provided features list.3. Extracts only the mean and standard deviation measurements.4. Replaces activity codes with descriptive activity names.5. Labels the dataset with meaningful variable names.6. Creates a second, independent tidy dataset containing the average of each variable for each activity and subject.Data Sources¥ Training Data: X_train.txt, y_train.txt, subject_train.txt¥ Test Data: X_test.txt, y_test.txt, subject_test.txt¥ Feature Names: features.txt¥ Activity Labels: activity_labels.txtVariablesMerged Datasets¥ X_full: Combined feature dataset from X_train and X_test.¥ y_full: Combined activity dataset from y_train and y_test.¥ subject_full: Combined subject dataset from subject_train and subject_test.Feature Naming & Selection¥ features: Vector containing feature names from features.txt.¥ mean_std_columns: Index of columns containing "mean()" or "std()" in X_full.¥ X_full_std_mean: Filtered dataset containing only mean and standard deviation measurements.?Activity Labels¥ activity_labels: Table mapping activity codes to descriptive names.¥ y_full$ActivityName: Descriptive activity names mapped from activity_labels.?Final Merged Dataset¥ df_full_std_mean: A dataset combining X_full_std_mean, y_full, and subject_full.¥ df_ave: The final tidy dataset with the average of each variable for each activity and subject.Data Transformations1. Merging Data?X_full <- rbind(X_train, X_test)2. y_full <- rbind(y_train, y_test)3. subject_full <- rbind(subject_train, subject_test)- Combines training and test datasets into a single dataset.4. Assigning Column Names?colnames(X_full) <- features$V2- Names the columns of X_full using features.txt.5. Extracting Mean & Standard Deviation Measurements?mean_std_columns <- grep("mean\\(\\)|std\\(\\)", Coleman's(X_full))6. X_full_std_mean <- X_full[, mean_std_columns]? Selects only columns that contain "mean()" or "std()".7. Mapping Descriptive Activity Names?y_full$ActivityName <- activity_labels$V2[match(y_full$V1, activity_labels$V1)]8. y_full <- y_full %>% select(-V1)? Matches activity codes to their respective descriptive names and drops numeric activity codes.9. Renaming Subject Column?colnames(subject_full)[colnames(subject_full) == "V1"] <- "Subject"- Renames subject column for clarity.10. Merging All Data?df_full_std_mean <- cbind(X_full_std_mean, y_full)11. df_full_std_mean <- cbind(df_full_std_mean, subject_full)- Combines subject, activity, and selected feature data into a single dataset.12. Creating Tidy Dataset with Averages?df_ave <- df_full_std_mean %>%- group_by(Subject, ActivityName) %>%- summarize(across(where(is.numeric), \(x) mean(x, na.rm = TRUE)))- Groups data by Subject and ActivityName.- Computes the average for each variable.Final Output¥ df_ave: A tidy dataset where each row represents a unique combination of Subject and ActivityName, and each column contains the average of a measurement.Notes¥ Only mean and standard deviation measurements are retained.¥ Activity labels are converted into descriptive names.¥ The dataset is tidy, following the principle that each variable has its own column and each observation has its own row.?